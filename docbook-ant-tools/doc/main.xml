<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<article xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
	<info>
		<title> DocBook Ant Tools 使用指南</title>
		<author>
			<personname>xmxsuperstar</personname>
			<email>xmxsuperstar@gmail.com</email>
		</author>
	</info>

	<sect1>
		<title>使用</title>
		<sect2>
			<title>安装使用</title>
			<itemizedlist>
				<listitem>
					<para>安装Java运行环境</para>
				</listitem>
				<listitem>
					<para>安装Apache Ant</para>
				</listitem>
				<listitem>
					<para>
						从Donwloads页面下载
						<application>docbook-ant-tools</application>
						解压或者从svn中checkout：
					</para>
					<screen>svn co
						http://docbook-ant-tools.googlecode.com/svn/trunk/docbook docbook
					</screen>
					<note>
						<para>这一步操作时间会比较长，需要从 Goole Code 的SVN下载大概100M的数据</para>
					</note>
				</listitem>
				<listitem>
					<para>修改main.xml，写自己的文档</para>
				</listitem>
				<listitem>
					<para>在build.xml所在目录运行ant</para>
					<note>
						<para>
							这一步操作在Mac OSX上可能报出堆内存不足，在执行这一步前设置下
							<command>ANT_OPTS</command>
							系统环境变量
						</para>
						<screen>export ANT_OPTS=-Xmx256m</screen>
					</note>
				</listitem>
				<listitem>
					<para>生成的文档在out目录</para>
				</listitem>
			</itemizedlist>
		</sect2>
		<sect2>
			<title>添加文档</title>
			<orderedlist>
				<listitem>
					<para>
						新建文档，如：
						<filename>docbook_guide.xml</filename>
					</para>
				</listitem>
				<listitem>
					<para>
						在
						<filename>main.xml</filename>
						的适当位置，用xinclude插入一个文档比如：
					</para>
					<programlisting language="xml">&lt;xi:include
						href="docbook_guide.xml"
						xmlns:xi="http://www.w3.org/2001/XInclude"/></programlisting>
				</listitem>
			</orderedlist>
			<para>然后运行ant，文档会出现在合集文档中</para>
		</sect2>
		<sect2>
			<title>DocBook XML 的编辑</title>
			<para>
				关于DocBook的基本知识，以及其XML语法等内容建议参考 DocBook: The Definitive Guide
				<xref linkend="BI_001" />
			</para>
		</sect2>
		<sect2>
			<title>只转换指定文档</title>
			<para>
				新建一个
				<filename>build.properties</filename>
				文件和
				<filename>build.xml</filename>
				同目录，在
				<filename>build.properties</filename>
				中设定
				<code>doc.main</code>
				参数为想要转换的xml文档
			</para>
			<programlisting language="ini">doc.main=${doc.dir}/guide.xml
			</programlisting>
		</sect2>
		<sect2>
			<title>其他转换命令</title>
			<orderedlist>
				<listitem>
					<para>
						<command>ant build-html</command>
						：生成单页html文件
					</para>
				</listitem>
				<listitem>
					<para>
						<command>ant build-chunk</command>
						：生成多页html文件
					</para>
				</listitem>
				<listitem>
					<para>
						<command>ant build-pdf</command>
						：生成PDF文件
					</para>
				</listitem>
				<listitem>
					<para>
						<command>ant build-rtf</command>
						：生成RTF文件
					</para>
				</listitem>
				<listitem>
					<para>
						<command>ant build-docx</command>
						：生成DOCX文件
						<footnote>
							<para>使用XMLmind XSL-FO Converter转换，但效果不是很理想，并且页脚有一个链接</para>
						</footnote>
					</para>
				</listitem>
				<listitem>
					<para>
						<command>ant build-epub</command>
						：生成epub文件
					</para>
				</listitem>
			</orderedlist>
		</sect2>
	</sect1>
	<sect1>
		<title>设置</title>
		<sect2>
			<title>语法高亮</title>
			<para>
				目前
				<application>docbook-ant-tools</application>
				支持语法高亮，只要是支持的语言会被自动语法高亮，支持的语言见xsl/docbook/highlighting目录
			</para>
			<para>下面的示例演示了Java语法高亮</para>
			<programlisting language="xml">
				&lt;programlisting language="java">
				package docbook.ant.tools;

				/**
				*
				* @author xmxsuperstar
				*
				*/
				public class Test {

				public static void main(String[] args) {
				// TODO Auto-generated method stub
				/*
				*中文注释
				*/
				System.out.println("Hello World");
				}

				}
				&lt;/programlisting>
			</programlisting>
			<para>输出的效果为：</para>
			<programlisting language="java">package docbook.ant.tools;

				/**
				*
				* @author xmxsuperstar
				*
				*/
				public class Test {

				public static void main(String[] args) {
				// TODO Auto-generated method stub
				/*
				*中文注释
				*/
				System.out.println("Hello World");
				}

				}</programlisting>
		</sect2>
		<sect2>
			<title>图片</title>
			<para>
				文档中所有用到的图片请放置在
				<filename>doc/resources/images</filename>
				目录下，生成文档的时候
				<filename>doc/resources</filename>
				目录下所有的文件会被拷贝到目标目录中去。
			</para>
			<para>
				插入图片时为了保证生成文档中图片的大小合适，请加上
				<code>contentdepth="100%" width="100%" scalefit="1"</code>
				三个参数，比如：
			</para>
			<programlisting language="xml">
				<xi:include href="resources/code/figure_example.xml"
					parse="text" xmlns:xi="http://www.w3.org/2001/XInclude" />
			</programlisting>
			<para>效果：</para>
			<figure>
				<title>硕大的图片</title>
				<mediaobject>
					<imageobject>
						<imagedata contentdepth="100%" width="100%" scalefit="1"
							fileref="resources/images/lena_std.png" />
					</imageobject>
				</mediaobject>
			</figure>
		</sect2>
		<sect2>
			<title>FOP以及PDF字体设置</title>
			<para>
				<application>FOP</application>
				的配置文件在
				<filename>res/fonts/conf.xml</filename>
				。
				FOP可用的字体在
				<filename>res/fonts</filename>
				目录。
				运行以下命令可以列出所有可用的字体并在
				<filename>out</filename>
				目录下生成
				<filename>font-sample.pdf</filename>
				文件，该文件包含了所有字体效果的示例：
			</para>
			<screen>ant read-font</screen>
			<para>
				<application>docbook-ant-tools</application>
				默认打开了
				<application>FOP</application>
				的
				<code>auto-detect</code>
				选项，因此不能使用操作系统安装的字体，如果要关闭该选项编辑
				<filename>conf/fop/conf.xml</filename>
				注释：
			</para>
			<programlisting language="xml">&lt;auto-detect/>
			</programlisting>
		</sect2>
		<sect2>
			<title>设置XSL转换相关参数</title>
			<para>所有XSL转换相关的配置均在xsl目录下，其中docbook目录中是官方发布的docbook xsl
				sheet。其余的几个文件是自定义xsl参数用到的。</para>
			<para>common.xsl 通用的设置，主要是语言。如果有其他所有输出格式都通用的设置也可以放在该文件里。</para>
			<para>chunk.xsl 输出多页HTML的配置。</para>
			<para>html.xsl 输出单页HTML的配置。</para>
			<para>fo.xsl 输出xsl-fo的配置，在这里控制输出PDF、RTF、DOCX的格式。</para>
			<para>
				关于XSL的相关自定义配置，建议参考 DocBook XSL: The Complete Guide
				<xref linkend="BI_002" />
				这本书几乎涵盖了DocBook所有可以自定义设置的方方面面，如果想要对XSL的转换或者输出的格式做深入的定制，这本书必须阅读。
			</para>
			<para>
				此外 DocBook XSL Stylesheets: Reference Documentation
				<xref linkend="BI_003" />
				这本书涵盖了所有可以设置的XSL参数。
			</para>
		</sect2>
	</sect1>
	<bibliography>
		<title>参考资料</title>
		<biblioentry xml:id="BI_001">
			<title>DocBook: The Definitive Guide</title>
			<author>
				<personname>Norman Walsh</personname>
			</author>
			<editor>
				<personname>Richard Hamilton</personname>
			</editor>
			<edition>1.0.4 for DocBook V5.0</edition>
			<bibliosource class="uri">
				<link xlink:href="http://www.docbook.org/tdg5/en/html/docbook.html">http://www.docbook.org/tdg5/en/html/docbook.html
				</link>
			</bibliosource>
		</biblioentry>
		<biblioentry xml:id="BI_002">
			<title>DocBook XSL: The Complete Guide</title>
			<author>
				<personname>Bob Stayton</personname>
			</author>
			<edition>Forth Edition</edition>
			<bibliosource class="uri">
				<link xlink:href="http://www.sagehill.net/docbookxsl/index.html">http://www.sagehill.net/docbookxsl/index.html
				</link>
			</bibliosource>
		</biblioentry>
		<biblioentry xml:id="BI_003">
			<title>DocBook XSL Stylesheets: Reference Documentation</title>
			<author>
				<personname>Norman Walsh</personname>
			</author>
			<bibliosource class="uri">
				<link xlink:href="http://docbook.sourceforge.net/release/xsl/current/doc/">http://docbook.sourceforge.net/release/xsl/current/doc/
				</link>
			</bibliosource>
		</biblioentry>
	</bibliography>
</article>
